"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 4.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import configparser
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "YOUR_DJANGO_SECRET"

# SECURITY WARNING: don't run with debug turned on in production!
try:
    config = configparser.ConfigParser()
    config.read("config.ini")
    API = config["API"]
    ALLOWED_HOST = API["ALLOWED_HOST"]
    DEBUG = API["DEBUG"]
except Exception as e:
    ALLOWED_HOST = "http://localhost:8000"
    DEBUG = True

ALLOWED_HOST = os.getenv("ALLOWED_HOST", ALLOWED_HOST)
DEBUG = os.getenv("DEBUG", DEBUG)
ALLOWED_HOSTS = [ALLOWED_HOST]

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "restapi_readability.apps.RestapiConfig",
    "restapi_simplification.apps.RestapiConfig",
    "rest_framework",
    "drf_yasg",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "restapi_readability.middleware.CorsMiddleware",
    "restapi_simplification.middleware.CorsMiddleware",
]

ROOT_URLCONF = "backend.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "backend.wsgi.application"

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

# Read the config file and get the database info.
try:
    config = configparser.ConfigParser()
    config.read("config.ini")
    DATABASE_INFO = config["DATABASE"]
    DATA_NAME = DATABASE_INFO["DATA_NAME"]
    USER = DATABASE_INFO["DATA_USER"]
    PASS = DATABASE_INFO["DATA_PASS"]
    CLUSTER = DATABASE_INFO["DATA_CLUSTER"]
    MONGODB_URL = DATABASE_INFO["MONGODB_URL"]
except Exception as e:
    print(e)
    DATA_NAME = ""
    USER = ""
    PASS = ""
    CLUSTER = ""
    MONGODB_URL = ""
    url = ""

DATA_NAME = os.getenv("DATA_NAME", DATA_NAME)
CLUSTER = os.getenv("CLUSTER", CLUSTER)
USER = os.environ.get("DATA_USER", USER)
PASS = os.environ.get("DATA_PASS", PASS)
MONGODB_URL = os.environ.get("MONGODB_URL", MONGODB_URL)
MONGODB_URL = MONGODB_URL.replace("<USER>", USER).replace("<PASS>", PASS).replace("<CLUSTER>", CLUSTER).replace(
    "<NAME>", DATA_NAME)
os.environ["MONGODB_URL_FULL"] = MONGODB_URL
DATABASES = {
    'default': {
        'ENGINE': 'djongo',
        'NAME': DATA_NAME,
        'ENFORCE_SCHEMA': False,
        'CLIENT': {
            'host': MONGODB_URL
        }
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator", },
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator", },
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator", },
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': None,
    'USE_SESSION_AUTH': False,
    # 'DEFAULT_AUTO_SCHEMA_CLASS': 'restapi_simplification.api_documentation.MySchema',
}

REDOC_SETTINGS = {
    'LAZY_RENDERING': False,
}
TEST_RUNNER = 'restapi_database.tests.MongoDBTestRunner'
